{"version":3,"sources":["../node_modules/@material-ui/icons/esm/NotificationImportantOutlined.js","Component/Noticfication.js","Component/NoticficationButton.js"],"names":["createSvgIcon","React","createElement","d","Noticfication","props","data","title","description","ListItem","button","ListItemText","primary","secondary","NoticficationButton","userStatus","useSelector","state","id","userInfo","_id","useFirestoreConnect","collection","where","queryParams","firestore","useFirestore","noticfications","ordered","Object","values","useState","anchorEl","setAnchorEl","activeNotic","reduce","sum","notic","seen","open","Boolean","IconButton","aria-label","onClick","e","currentTarget","Badge","badgeContent","color","anchorOrigin","vertical","horizontal","NotificationImportantOutlined","Popover","onClose","get","then","batch","docs","forEach","update","ref","commit","transformOrigin","map","key"],"mappings":"wNAEeA,cAAcC,IAAMC,cAAc,OAAQ,CACvDC,EAAG,8QACD,iC,mCCDSC,EAAgB,SAACC,GAAW,IAAD,EACRA,EAAMC,KAA3BC,EAD6B,EAC7BA,MAAMC,EADuB,EACvBA,YACb,OACI,kBAACC,EAAA,EAAD,CAAUC,QAAM,GACZ,kBAACC,EAAA,EAAD,CAAcC,QAASL,EAAOM,UAAWL,MCAxCM,EAAsB,WAC/B,IAAMC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMF,cAC1CG,EAAKH,EAAWI,UAAYJ,EAAWI,SAASC,IACtDC,+BAAoB,iBAAM,CACtB,CAAEC,WAAY,iBAAkBC,MAAO,CAAC,CAAC,SAAU,KAAML,IAAMM,YAAa,CAAC,0BAEjF,IAAMC,EAAYC,yBAEZC,EAAiBX,aACnB,gBAAgBY,EAAhB,EAAGH,UAAaG,QAAhB,OAAgCA,EAAQD,gBAAkBE,OAAOC,OAAOF,EAAQD,mBAT/C,EAWLI,mBAAS,MAXJ,mBAW9BC,EAX8B,KAWpBC,EAXoB,KAa/BC,EACFP,GACAA,EAAeQ,QAAO,SAACC,EAAKC,GACxB,OAAOA,EAAMC,KAAOF,EAAMA,EAAM,IACjC,GACDG,EAAOC,QAAQR,GAkBrB,OACI,6BACI,kBAACS,EAAA,EAAD,CAAYC,aAAW,gBAAgBC,QAL3B,SAACC,GACjBX,EAAYW,EAAEC,iBAKN,kBAACC,EAAA,EAAD,CACIC,aAAcb,EACdc,MAAM,YACNC,aAAc,CAAEC,SAAU,SAAUC,WAAY,UAEhD,kBAACC,EAAD,QAGR,kBAACC,EAAA,EAAD,CACId,KAAMA,EACNP,SAAUA,EACVsB,QA/BS,WACjBrB,EAAY,MACMR,EAAUH,WAAW,kBAElCC,MAAM,OAAQ,MAAM,GACpBgC,MACAC,MAAK,SAAClD,GACH,IAAImD,EAAQhC,EAAUgC,QACtBnD,EAAKoD,KAAKC,SAAQ,SAACtB,GACfoB,EAAMG,OAAOvB,EAAMwB,IAAK,CAAEvB,MAAM,OAEpCmB,EAAMK,aAqBNb,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBY,gBAAiB,CACbb,SAAU,MACVC,WAAY,WAGfxB,GACGA,EAAeqC,KAAI,SAAC3B,GAChB,OAAO,kBAAC,EAAD,CAAe4B,IAAK5B,EAAMnB,GAAIZ,KAAM+B,UAMpDvB","file":"static/js/15.2781f56f.chunk.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M10.01 21.01c0 1.1.89 1.99 1.99 1.99s1.99-.89 1.99-1.99h-3.98zM12 6c2.76 0 5 2.24 5 5v7H7v-7c0-2.76 2.24-5 5-5zm0-4.5c-.83 0-1.5.67-1.5 1.5v1.17C7.36 4.85 5 7.65 5 11v6l-2 2v1h18v-1l-2-2v-6c0-3.35-2.36-6.15-5.5-6.83V3c0-.83-.67-1.5-1.5-1.5zM11 8h2v4h-2zm0 6h2v2h-2z\"\n}), 'NotificationImportantOutlined');","import React from 'react'\r\nimport { ListItem, ListItemText } from '@material-ui/core'\r\n\r\nexport const Noticfication = (props) => {\r\n    const {title,description} = props.data\r\n    return (\r\n        <ListItem button>\r\n            <ListItemText primary={title} secondary={description}/>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { IconButton, Badge, Popover } from \"@material-ui/core\";\r\nimport { NotificationImportantOutlined } from \"@material-ui/icons\";\r\nimport { useFirestoreConnect, useFirestore } from \"react-redux-firebase\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Noticfication } from \"./Noticfication\";\r\n\r\nexport const NoticficationButton = () => {\r\n    const userStatus = useSelector((state) => state.userStatus);\r\n    const id = userStatus.userInfo && userStatus.userInfo._id;\r\n    useFirestoreConnect(() => [\r\n        { collection: \"noticfications\", where: [[\"userId\", \"==\", id]], queryParams: [\"orderByChild=Date\"] },\r\n    ]);\r\n    const firestore = useFirestore();\r\n\r\n    const noticfications = useSelector(\r\n        ({ firestore: { ordered } }) => ordered.noticfications && Object.values(ordered.noticfications)\r\n    );\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n    const activeNotic =\r\n        noticfications &&\r\n        noticfications.reduce((sum, notic) => {\r\n            return notic.seen ? sum : sum + 1;\r\n        }, 0);\r\n    const open = Boolean(anchorEl);\r\n    const closeHandler = () => {\r\n        setAnchorEl(null);\r\n        const colection = firestore.collection(\"noticfications\");\r\n        colection\r\n            .where(\"seen\", \"==\", false)\r\n            .get()\r\n            .then((data) => {\r\n                let batch = firestore.batch();\r\n                data.docs.forEach((notic) => {\r\n                    batch.update(notic.ref, { seen: true });\r\n                });\r\n                batch.commit();\r\n            });\r\n    };\r\n    const openHandler = (e) => {\r\n        setAnchorEl(e.currentTarget);\r\n    };\r\n    return (\r\n        <div>\r\n            <IconButton aria-label=\"noticfication\" onClick={openHandler}>\r\n                <Badge\r\n                    badgeContent={activeNotic}\r\n                    color=\"secondary\"\r\n                    anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n                >\r\n                    <NotificationImportantOutlined />\r\n                </Badge>\r\n            </IconButton>\r\n            <Popover\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                onClose={closeHandler}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\",\r\n                }}\r\n            >\r\n                {noticfications &&\r\n                    noticfications.map((notic) => {\r\n                        return <Noticfication key={notic.id} data={notic} />;\r\n                    })}\r\n            </Popover>\r\n        </div>\r\n    );\r\n};\r\nexport default NoticficationButton;\r\n"],"sourceRoot":""}